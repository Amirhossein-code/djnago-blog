##Features OverView:

User Registration and Authentication:

    User registration with username, email, and password.
    User login and authentication using JWT tokens.

Author Profiles:

    Automatically create author profiles for registered users.
    Users can view their own profile and update profile information.
    Users can view profiles of other authors.

Blog Post Management:

    Users can create and publish blog posts.
    Users can edit and update their own blog posts.
    Users can delete their own blog posts.
    Users can view a list of their own blog posts at a specified endpoint.

Categories:

    Users can create categories for organizing blog posts.
    Users can associate posts with specific categories.
    Users cannot delete or modify categories once created.

Reviews:

    Users can leave reviews for individual blog posts.
    Users can leave reviews for authors.
    Users can manage their own reviews by editing or deleting them.


##Authentication
The weblog API supports user registration and authentication using JSON Web Tokens (JWT) and the Djoser library.
Users can register an account, log in, and obtain an authentication token for subsequent requests.

User Registration
    POST /auth/users/: Register a new user account.
User Login
    POST /auth/jwt/create/: Obtain an authentication token by providing valid login credentials.
Djoser Endpoints (Authentication Backend)
    GET /users/: See users.
    GET /users/me/: See the logged-in user's User Model fields.
    POST /users/confirm/: Confirm user registration.
    POST /users/resend_activation/: Resend activation email.
    POST /users/set_password/: Set user password.
    POST /users/reset_password/: Request password reset.
    POST /users/reset_password_confirm/: Confirm password reset.
    POST /users/set_username/: Set user username.
    POST /users/reset_username/: Request username reset.
    POST /users/reset_username_confirm/: Confirm username reset.
    POST /jwt/create/ (JSON Web Token Authentication): Generate a new JWT token.
    POST /jwt/refresh/ (JSON Web Token Authentication): Refresh the JWT token.
    POST /jwt/verify/ (JSON Web Token Authentication): Verify the validity of the JWT token.

To authenticate subsequent requests, include the JWT token in the Authorization header as follows:
```
Authorization: Bearer <JWT Token>
```


##Authors end point www.domain.com/authors/ :

The weblog API includes endpoints for managing author profiles. Each user's author profile is created 
automatically during registration using a Signal. Users can view their own profile, complete their 
registration by adding more information, and access other authors' profiles and their related posts.

    GET /authors/            : List all authors.
    GET /authors/me/         : Retrieve the profile of the currently logged-in user.
    PUT /authors/me/         : Complete registration by adding additional information to the user's profile.
    GET /authors/<id>/       : Retrieve the profile of a specific author by ID.
    GET /authors/<id>/posts/ : Retrieve all posts from the specific author.
    GET /authors/<id>/reviews
    GET /authors/<id>/reviews/<id>